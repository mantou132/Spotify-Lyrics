{"version":3,"file":"gem.js","sources":["../node_modules/@mantou/gem/lib/utils.js","../node_modules/@mantou/gem/lib/store.js","../node_modules/@mantou/gem/lib/history.js","../node_modules/lit-html/lib/directive.js","../node_modules/lit-html/lib/dom.js","../node_modules/lit-html/lib/part.js","../node_modules/lit-html/lib/template.js","../node_modules/lit-html/lib/template-instance.js","../node_modules/lit-html/lib/template-result.js","../node_modules/lit-html/lib/parts.js","../node_modules/lit-html/lib/default-template-processor.js","../node_modules/lit-html/lib/template-factory.js","../node_modules/lit-html/lib/render.js","../node_modules/lit-html/lit-html.js","../node_modules/@mantou/gem/lib/version.js","../node_modules/lit-html/directives/repeat.js","../node_modules/lit-html/directives/guard.js","../node_modules/lit-html/directives/if-defined.js","../node_modules/@mantou/gem/lib/element.js","../node_modules/@mantou/gem/lib/decorators.js"],"sourcesContent":["var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _LinkedList_instances, _LinkedList_map, _LinkedList_firstItem, _LinkedList_lastItem, _LinkedList_delete, _QueryString_stringify, _QueryString_parse;\nconst microtaskSet = new Set();\nexport function addMicrotask(func) {\n    if (typeof func !== 'function')\n        return;\n    if (!microtaskSet.size) {\n        // delayed execution callback after updating store\n        globalThis.queueMicrotask(() => {\n            microtaskSet.forEach((func) => func());\n            microtaskSet.clear();\n        });\n    }\n    microtaskSet.delete(func);\n    microtaskSet.add(func);\n}\nconst microtaskStack = [];\nfunction execMicrotaskStack() {\n    for (let i = microtaskStack.length - 1; i >= 0; i--) {\n        microtaskStack[i]();\n    }\n    microtaskStack.length = 0;\n}\n/**\n * 添加回调函数到微任务队列栈；\n * 先进后执行，使用这个函数可以改变嵌套的元素 `mounted` 的顺序；\n */\nexport function addMicrotaskToStack(func) {\n    if (!microtaskStack.length) {\n        addMicrotask(execMicrotaskStack);\n    }\n    microtaskStack.push(func);\n}\n// 不编码 hash 用于比较\nexport function absoluteLocation(currentPath = '', relativePath = '') {\n    const { pathname, search, hash } = new URL(relativePath, location.origin + currentPath);\n    return pathname + search + decodeURIComponent(hash);\n}\nexport function addListener(target, type, listener, options) {\n    target.addEventListener(type, listener, options);\n    return () => target.removeEventListener(type, listener, options);\n}\nexport class LinkedList extends EventTarget {\n    constructor() {\n        super(...arguments);\n        _LinkedList_instances.add(this);\n        _LinkedList_map.set(this, new Map());\n        _LinkedList_firstItem.set(this, void 0);\n        _LinkedList_lastItem.set(this, void 0);\n    }\n    get size() {\n        return __classPrivateFieldGet(this, _LinkedList_map, \"f\").size;\n    }\n    get first() {\n        return __classPrivateFieldGet(this, _LinkedList_firstItem, \"f\");\n    }\n    get last() {\n        return __classPrivateFieldGet(this, _LinkedList_lastItem, \"f\");\n    }\n    isSuperLinkOf(subLink) {\n        let subItem = subLink.first;\n        if (!subItem)\n            return true;\n        let item = this.find(subItem.value);\n        while (item && item.value === subItem.value) {\n            subItem = subItem.next;\n            if (!subItem)\n                return true;\n            item = item.next;\n        }\n        return false;\n    }\n    find(value) {\n        return __classPrivateFieldGet(this, _LinkedList_map, \"f\").get(value);\n    }\n    // 添加到尾部，已存在时会删除老的项目\n    // 如果是添加第一个，start 事件会在添加前触发，避免处理事件重复的逻辑\n    add(value) {\n        if (!__classPrivateFieldGet(this, _LinkedList_lastItem, \"f\")) {\n            this.dispatchEvent(new CustomEvent('start'));\n        }\n        const item = __classPrivateFieldGet(this, _LinkedList_instances, \"m\", _LinkedList_delete).call(this, value) || { value };\n        item.prev = __classPrivateFieldGet(this, _LinkedList_lastItem, \"f\");\n        if (item.prev) {\n            item.prev.next = item;\n        }\n        item.next = undefined;\n        __classPrivateFieldSet(this, _LinkedList_lastItem, item, \"f\");\n        if (!__classPrivateFieldGet(this, _LinkedList_firstItem, \"f\")) {\n            __classPrivateFieldSet(this, _LinkedList_firstItem, item, \"f\");\n        }\n        __classPrivateFieldGet(this, _LinkedList_map, \"f\").set(value, item);\n    }\n    // 删除这个元素后没有其他元素时立即出发 end 事件\n    delete(value) {\n        const deleteItem = __classPrivateFieldGet(this, _LinkedList_instances, \"m\", _LinkedList_delete).call(this, value);\n        if (!__classPrivateFieldGet(this, _LinkedList_firstItem, \"f\")) {\n            this.dispatchEvent(new CustomEvent('end'));\n        }\n        return deleteItem;\n    }\n    // 获取头部元素\n    // 会从链表删除\n    get() {\n        const firstItem = __classPrivateFieldGet(this, _LinkedList_firstItem, \"f\");\n        if (!firstItem)\n            return;\n        this.delete(firstItem.value);\n        return firstItem.value;\n    }\n}\n_LinkedList_map = new WeakMap(), _LinkedList_firstItem = new WeakMap(), _LinkedList_lastItem = new WeakMap(), _LinkedList_instances = new WeakSet(), _LinkedList_delete = function _LinkedList_delete(value) {\n    const existItem = __classPrivateFieldGet(this, _LinkedList_map, \"f\").get(value);\n    if (existItem) {\n        if (existItem.prev) {\n            existItem.prev.next = existItem.next;\n        }\n        else {\n            __classPrivateFieldSet(this, _LinkedList_firstItem, existItem.next, \"f\");\n        }\n        if (existItem.next) {\n            existItem.next.prev = existItem.prev;\n        }\n        else {\n            __classPrivateFieldSet(this, _LinkedList_lastItem, existItem.prev, \"f\");\n        }\n        __classPrivateFieldGet(this, _LinkedList_map, \"f\").delete(value);\n    }\n    return existItem;\n};\nexport class PropProxyMap extends WeakMap {\n    get(ele) {\n        let proxy = super.get(ele);\n        if (!proxy) {\n            proxy = {};\n            this.set(ele, proxy);\n        }\n        return proxy;\n    }\n}\nexport class QueryString extends URLSearchParams {\n    constructor(param) {\n        super(param);\n        _QueryString_stringify.set(this, (value) => (typeof value === 'string' ? value : JSON.stringify(value)));\n        _QueryString_parse.set(this, (value) => {\n            if (!value)\n                return null;\n            try {\n                return JSON.parse(value);\n            }\n            catch (_a) {\n                return null;\n            }\n        });\n    }\n    // support `{ key: ObjectValue }`\n    concat(param) {\n        let query;\n        if (typeof param === 'string') {\n            query = Object.fromEntries(new URLSearchParams(param).entries());\n        }\n        else {\n            query = param;\n        }\n        Object.entries(query).forEach(([key, value]) => {\n            this.append(key, __classPrivateFieldGet(this, _QueryString_stringify, \"f\").call(this, value));\n        });\n    }\n    setAny(key, value) {\n        if (Array.isArray(value)) {\n            this.delete(key);\n            value.forEach((e) => this.append(key, __classPrivateFieldGet(this, _QueryString_stringify, \"f\").call(this, e)));\n        }\n        else {\n            const v = __classPrivateFieldGet(this, _QueryString_stringify, \"f\").call(this, value);\n            v ? this.set(key, v) : this.delete(key);\n        }\n    }\n    getAny(key) {\n        return this.getAnyAll(key)[0];\n    }\n    getAnyAll(key) {\n        return this.getAll(key)\n            .filter((e) => e !== '')\n            .map((e) => __classPrivateFieldGet(this, _QueryString_parse, \"f\").call(this, e));\n    }\n    toString() {\n        const string = super.toString();\n        return string ? `?${string}` : '';\n    }\n    toJSON() {\n        return this.toString();\n    }\n}\n_QueryString_stringify = new WeakMap(), _QueryString_parse = new WeakMap();\n/**\n * 写纯文本，仅用于 IDE HTML 高亮\n *\n * 不同于 lit-html 的 `html` 模版函数，写 attribute 时必须手动写引号并自行进行 html 编码\n */\nexport function raw(arr, ...args) {\n    return arr.reduce((prev, current, index) => { var _a; return prev + ((_a = args[index - 1]) !== null && _a !== void 0 ? _a : '') + current; });\n}\n// 写 css 文本，在 CSSStyleSheet 中使用\nexport function css(arr, ...args) {\n    return raw(arr, ...args);\n}\n// 跨多个 gem 工作\nexport const SheetToken = Symbol.for('gem@sheetToken');\n/**\n *\n * 创建 style sheet 用于 `adoptedStyleSheets`，不支持样式更新，只支持自定义 CSS 属性\n * @param rules string | Record<string, string>\n * @param media string 媒体查询\n */\nexport function createCSSSheet(rules, media) {\n    const styleSheet = new CSSStyleSheet({ media });\n    const sheet = {};\n    let style = '';\n    if (typeof rules === 'string') {\n        style = rules;\n    }\n    else {\n        Object.keys(rules).forEach((key) => {\n            sheet[key] = `${key}-${randomStr()}`;\n            switch (rules[key].type) {\n                case 'class':\n                    style += `.${sheet[key]} {${rules[key].styledContent}}`;\n                    break;\n                case 'id':\n                    style += `#${sheet[key]} {${rules[key].styledContent}}`;\n                    break;\n                default:\n                    style += `@keyframes ${key} {${rules[key].styledContent}}`;\n            }\n        });\n    }\n    styleSheet.replaceSync(style);\n    sheet[SheetToken] = styleSheet;\n    return sheet;\n}\nexport function randomStr(len = 5) {\n    const str = Math.random().toString(36).slice(2).slice(0, len);\n    if (str.length < len)\n        return str + randomStr(len - str.length);\n    return str;\n}\n// 写 css 文本，在 CSSStyleSheet 中使用，使用 styed-components 高亮\n//\n// createCSSSheet({\n//   red: styled.class`\n//     background: red;\n//     &:hover {\n//       background: blue;\n//     }\n//   `,\n// });\nexport const styled = {\n    class: (arr, ...args) => {\n        return { styledContent: raw(arr, ...args), type: 'class' };\n    },\n    id: (arr, ...args) => {\n        return { styledContent: raw(arr, ...args), type: 'id' };\n    },\n    keyframes: (arr, ...args) => {\n        return { styledContent: raw(arr, ...args), type: 'keyframes' };\n    },\n};\nexport function camelToKebabCase(str) {\n    return str.replace(/[A-Z]/g, ($1) => '-' + $1.toLowerCase());\n}\nexport function kebabToCamelCase(str) {\n    return str.replace(/-(.)/g, (_substr, $1) => $1.toUpperCase());\n}\nexport function cleanObject(o) {\n    Object.keys(o).forEach((key) => {\n        const k = key;\n        delete o[k];\n    });\n    return o;\n}\nexport class GemError extends Error {\n    constructor(msg) {\n        super(msg);\n        this.message = `gem: ${this.message}`;\n    }\n}\nexport function isArrayChange(newValues, oldValues) {\n    const length = newValues.length;\n    if (oldValues.length !== length)\n        return true;\n    for (let i = 0; i < length; i++) {\n        if (newValues[i] !== oldValues[i])\n            return true;\n    }\n    return false;\n}\nexport function removeItems(target, items) {\n    const set = new Set(items);\n    return target.filter((e) => {\n        if (set.has(e)) {\n            set.delete(e);\n            return false;\n        }\n        return true;\n    });\n}\nexport function objectMapToString(object, separate, toString) {\n    let result = separate;\n    for (const key in object) {\n        const s = toString(key, object[key]);\n        result += s ? s + separate : '';\n    }\n    return result;\n}\n// 不支持 webkit 属性\nexport function styleMap(object) {\n    return objectMapToString(object, ';', (key, value) => value || value === 0 ? `${camelToKebabCase(key)}:${value}` : '');\n}\nexport function classMap(object) {\n    return objectMapToString(object, ' ', (key, value) => (value ? key : ''));\n}\nexport const partMap = classMap;\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts\nexport function exportPartsMap(object) {\n    return objectMapToString(object, ',', (key, value) => value === true || key === value ? key : value ? `${key}:${value}` : '');\n}\n/**\n * @example\n * ```css\n * animation: 150ms ease 0ms showMask;`\n * @keyframes showMask {\n *   from {\n *     opacity: 0;\n *   }\n * }\n * ```\n */\n// export function createCSSAnimation(\n//   keyframes: PropertyIndexedKeyframes | Keyframe[],\n//   options?: number | (KeyframeEffectOptions & { name: string }),\n// ) {\n//   const frames = new Map<number, StyleObject>();\n//   if (Array.isArray(keyframes)) {\n//     keyframes.forEach((keyframe, index) => {\n//       const offset = keyframes.length === 1 ? 1 : keyframe.offset || index / (keyframes.length - 1);\n//       frames.set(offset, {\n//         ...keyframe,\n//         // https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API/Keyframe_Formats#attributes\n//         cssOffset: undefined,\n//         offset: keyframe.cssOffset,\n//         composite: undefined,\n//         animationComposition: keyframe.composite,\n//         easing: undefined,\n//         animationTimingFunction: keyframe.easing,\n//       } as StyleObject);\n//     });\n//   } else {\n//     const offsetList: (number | null)[] = Array.isArray(keyframes.offset)\n//       ? keyframes.offset\n//       : keyframes.offset === undefined\n//         ? []\n//         : [keyframes.offset];\n//     if (offsetList.length && offsetList.at(-1) !== 1) offsetList.push(1);\n//     const setStyle = (offset: number, key: string, value: string | number | null | undefined) => {\n//       const style = frames.get(offset) || {};\n//       switch (key) {\n//         case 'offset':\n//           break;\n//         case 'cssOffset':\n//           Reflect.set(style, 'offset', value);\n//           break;\n//         case 'composite':\n//           Reflect.set(style, 'animationComposition', value);\n//           break;\n//         case 'easing':\n//           Reflect.set(style, 'animationTimingFunction', value);\n//           break;\n//         default:\n//           Reflect.set(style, key, value);\n//       }\n//       frames.set(offset, style);\n//     };\n//     for (const key in keyframes) {\n//       const framesValue = keyframes[key];\n//       !Array.isArray(framesValue)\n//         ? setStyle(1, key, framesValue)\n//         : framesValue.length === 1\n//           ? setStyle(1, key, framesValue[0])\n//           : framesValue.forEach((value, index) =>\n//               setStyle(offsetList[index] ?? index / (framesValue.length - 1), key, value),\n//             );\n//     }\n//   }\n//   let framesStr = '';\n//   frames.forEach((rules, offset) => {\n//     framesStr += `${(offset * 100).toFixed()}%{${styleMap(rules)}}`;\n//   });\n//   if (options) {\n//     const {\n//       // 只能使用 ms 数字\n//       duration = 0,\n//       easing = '',\n//       delay = 0,\n//       iterations = 1,\n//       direction = '',\n//       fill = '',\n//       name = `ani-${randomStr()}`,\n//     } = typeof options === 'number' ? ({ duration: options } as Exclude<typeof options, number>) : options;\n//     return `${duration}ms ${easing} ${delay}ms ${iterations} ${direction} ${fill} ${name};@keyframes ${name}{${framesStr}}`;\n//   }\n//   return framesStr;\n// }\n//# sourceMappingURL=utils.js.map","import { addMicrotask, GemError } from './utils';\nexport const StoreListenerMap = new WeakMap();\nexport function createStore(originStore) {\n    if (StoreListenerMap.has(originStore)) {\n        throw new GemError('argument error');\n    }\n    StoreListenerMap.set(originStore, new Set());\n    return originStore;\n}\nexport function updateStore(store, value) {\n    var _a;\n    Object.assign(store, value);\n    (_a = StoreListenerMap.get(store)) === null || _a === void 0 ? void 0 : _a.forEach((func) => {\n        addMicrotask(func);\n    });\n}\nexport function useStore(originStore) {\n    const store = createStore(originStore);\n    return [store, (value) => updateStore(store, value)];\n}\nexport function connect(store, func) {\n    const listeners = StoreListenerMap.get(store);\n    listeners === null || listeners === void 0 ? void 0 : listeners.add(func);\n    return () => {\n        listeners === null || listeners === void 0 ? void 0 : listeners.delete(func);\n    };\n}\nexport function disconnect(store, func) {\n    const listeners = StoreListenerMap.get(store);\n    listeners === null || listeners === void 0 ? void 0 : listeners.delete(func);\n}\n//# sourceMappingURL=store.js.map","// https://github.com/WICG/navigation-api#stakeholder-feedback\nimport { connect, useStore } from './store';\nimport { QueryString, cleanObject, GemError, absoluteLocation } from './utils';\nconst nativeHistory = window.history;\nconst nativePushState = nativeHistory.pushState.bind(nativeHistory);\nconst nativeReplaceState = nativeHistory.replaceState.bind(nativeHistory);\nlet key = 0;\nconst getKey = () => `${performance.now()}-${++key}`;\nconst [store, updateHistoryStore] = useStore({\n    $hasCloseHandle: false,\n    $hasOpenHandle: false,\n    $hasShouldCloseHandle: false,\n    $key: '',\n});\nconst paramsMap = new Map();\nfunction validData(data) {\n    const { $key, $hasCloseHandle, $hasOpenHandle, $hasShouldCloseHandle } = data || {};\n    if (store.$key === $key)\n        return;\n    if ($key)\n        throw new GemError('`$key` is not allowed');\n    if ($hasCloseHandle)\n        throw new GemError('`$hasCloseHandle` is not allowed');\n    if ($hasOpenHandle)\n        throw new GemError('`$hasOpenHandle` is not allowed');\n    if ($hasShouldCloseHandle)\n        throw new GemError('`$hasShouldCloseHandle` is not allowed');\n}\nfunction getUrlBarPath(internalPath) {\n    return gemHistory.basePath ? gemHistory.basePath + internalPath : internalPath;\n}\nfunction getInternalPath(urlBarPath) {\n    if (urlBarPath === gemHistory.basePath)\n        return '/';\n    return urlBarPath.replace(new RegExp(`^${gemHistory.basePath}/`), '/');\n}\nfunction dispatchBeforeChangeEvent() {\n    gemHistory.dispatchEvent(new CustomEvent('beforechange'));\n}\nfunction normalizeParams(params) {\n    var _a, _b;\n    const current = paramsMap.get(store.$key) ||\n        { path: getInternalPath(location.pathname), query: new QueryString() };\n    // 没提供 path 使用当前 path\n    const path = params.path ? absoluteLocation(current.path, params.path) : getInternalPath(location.pathname);\n    // 没提供 query 又没有提供 path 时使用当前 search\n    const newQueryObject = new QueryString((_a = params.query) !== null && _a !== void 0 ? _a : (params.path ? '' : location.search));\n    const queryChanged = String(newQueryObject) !== String(current.query);\n    const query = queryChanged ? newQueryObject : current.query;\n    const urlChanged = path !== current.path || queryChanged;\n    // 没提供 title 又没有改变 URL 时使用当前 document.title\n    const title = params.title || (urlChanged ? '' : document.title);\n    const statusChanged = params.close || params.data || params.open || params.shouldClose;\n    // 没提供 hash 又没有改变 URL 仅仅是状态更新时使用当前 hash\n    const hash = decodeURIComponent((_b = params.hash) !== null && _b !== void 0 ? _b : (!urlChanged && statusChanged ? location.hash : ''));\n    return { ...params, title, path, query, hash };\n}\nfunction updateHistory(p, native) {\n    validData(p.data);\n    const params = normalizeParams(p);\n    const { title, path, query, hash, close, open, shouldClose, data } = params;\n    const state = {\n        $hasCloseHandle: !!close,\n        $hasOpenHandle: !!open,\n        $hasShouldCloseHandle: !!shouldClose,\n        $key: getKey(),\n        $title: title,\n        ...data,\n    };\n    paramsMap.set(state.$key, params);\n    dispatchBeforeChangeEvent();\n    cleanObject(store);\n    updateHistoryStore(state);\n    const url = getUrlBarPath(path) + new QueryString(query) + hash;\n    const prevHash = decodeURIComponent(location.hash);\n    native(state, title, url);\n    if (prevHash !== hash)\n        window.dispatchEvent(new CustomEvent('hashchange'));\n}\n// 跨框架时，调用者对 basePath 无感知\nfunction updateHistoryByNative(data, title, originUrl, native) {\n    validData(data);\n    const state = {\n        $key: getKey(),\n        $title: title,\n        ...(data || {}),\n    };\n    const { pathname, search, hash } = new URL(originUrl, location.origin + location.pathname);\n    const params = normalizeParams({ path: pathname, query: new QueryString(search), hash, title, data });\n    paramsMap.set(state.$key, params);\n    dispatchBeforeChangeEvent();\n    cleanObject(store);\n    updateHistoryStore(state);\n    const url = getUrlBarPath(pathname) + params.query + hash;\n    const prevHash = location.hash;\n    native(state, title, url);\n    // `location.hash` 和 `hash` 都已经进行了 url 编码，可以直接进行相等判断\n    if (prevHash !== hash)\n        window.dispatchEvent(new CustomEvent('hashchange'));\n}\nconst [gemBasePathStore, updateBasePathStore] = useStore({\n    basePath: '',\n});\nclass GemHistory extends EventTarget {\n    get store() {\n        return store;\n    }\n    get currentKey() {\n        return store.$key;\n    }\n    get basePath() {\n        return gemBasePathStore.basePath;\n    }\n    set basePath(basePath) {\n        // 应用初始化的时候设置\n        updateBasePathStore({ basePath });\n        // paramsMap 更新后 ui 才会更新\n        Object.assign(paramsMap.get(store.$key), { path: getInternalPath(location.pathname) });\n    }\n    getParams() {\n        return paramsMap.get(store.$key);\n    }\n    updateParams(params) {\n        Object.assign(paramsMap.get(store.$key), params);\n        updateHistoryStore();\n    }\n    push(params) {\n        updateHistory(params, nativePushState);\n    }\n    replace(params) {\n        updateHistory(params, nativeReplaceState);\n    }\n    pushIgnoreCloseHandle(params) {\n        var _a, _b;\n        if (store.$hasCloseHandle) {\n            (_b = (_a = paramsMap.get(store.$key)) === null || _a === void 0 ? void 0 : _a.close) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.replace(params);\n        }\n        else {\n            this.push(params);\n        }\n    }\n    forward() {\n        nativeHistory.forward();\n    }\n    back() {\n        nativeHistory.back();\n    }\n}\n// `<gem-**>` 只读写父应用 `basePath`\nconst gemHistory = new GemHistory();\nconst [gemTitleStore, updateTitleStore] = useStore({ title: '' });\nconst _GEMHISTORY = { history: gemHistory, titleStore: gemTitleStore, basePathStore: gemBasePathStore };\nif (!window._GEMHISTORY) {\n    window._GEMHISTORY = _GEMHISTORY;\n    nativeHistory.pushState = function (state, title, path) {\n        updateHistoryByNative(state, title, path, nativePushState);\n    };\n    nativeHistory.replaceState = function (state, title, path) {\n        updateHistoryByNative(state, title, path, nativeReplaceState);\n    };\n    // 点击 `<a>`\n    window.addEventListener('hashchange', ({ isTrusted }) => {\n        if (isTrusted) {\n            gemHistory.replace({ hash: location.hash });\n        }\n    });\n    if (!nativeHistory.state) {\n        // 初始化 historyState\n        const { pathname, search, hash } = location;\n        gemHistory.replace({ path: pathname, query: search, hash });\n    }\n    else if (nativeHistory.state.$hasCloseHandle) {\n        updateHistoryStore(nativeHistory.state);\n        const params = normalizeParams({ title: document.title });\n        paramsMap.set(store.$key, params);\n        // 有 handle 返回键的页面刷新需要清除返回 handler\n        gemHistory.back();\n    }\n    else {\n        // 有 gem 历史的正常普通刷新, 储存 params\n        const params = normalizeParams({ title: document.title, hash: location.hash });\n        updateHistoryStore({\n            $key: getKey(),\n            ...(nativeHistory.state || {}),\n        });\n        paramsMap.set(store.$key, params);\n    }\n    connect(gemTitleStore, () => {\n        const params = paramsMap.get(store.$key);\n        if (params) {\n            params.title = gemTitleStore.title;\n        }\n    });\n    connect(store, () => {\n        const { title } = gemHistory.getParams();\n        if (title !== gemTitleStore.title) {\n            updateTitleStore({ title });\n        }\n    });\n    /**\n     * 表示 popstate handler 中正在进行导航\n     */\n    let navigating = false;\n    window.addEventListener('popstate', (event) => {\n        var _a, _b;\n        const newState = event.state;\n        if (!(newState === null || newState === void 0 ? void 0 : newState.$key)) {\n            // 比如作为其他框架 app 的宿主 app\n            return;\n        }\n        if (navigating) {\n            navigating = false;\n            return;\n        }\n        // 处理 forward or back\n        // replace 不会触发\n        // 刷新后再导航需要从当前 state 中构建 params\n        // 理论上该条历史记录中不会出现事件处理器\n        // 子 app 导航也需要从 state 中构建 params\n        if (!paramsMap.has(newState.$key)) {\n            const { pathname, search, hash } = location;\n            paramsMap.set(newState.$key, {\n                path: pathname,\n                query: new QueryString(search),\n                hash: decodeURIComponent(hash),\n                title: newState.$title, // document.title 是导航前的\n                data: newState,\n            });\n        }\n        // url 变化前 historyItem\n        const prevState = store;\n        const isForward = parseFloat(newState.$key) > parseFloat(prevState.$key);\n        if (isForward && newState.$hasOpenHandle) {\n            // 返回键关闭的 modal 能前进键重新打开\n            // 刷新后不能工作：刷新后 historyItem 中只有 url\n            // 能在子 app 中工作\n            (_b = (_a = paramsMap.get(newState.$key)) === null || _a === void 0 ? void 0 : _a.open) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n        else if (prevState.$hasCloseHandle) {\n            const prevParams = paramsMap.get(prevState.$key);\n            const closeHandle = prevParams === null || prevParams === void 0 ? void 0 : prevParams.close;\n            const shouldCloseHandle = prevParams === null || prevParams === void 0 ? void 0 : prevParams.shouldClose;\n            const notAllowClose = shouldCloseHandle && !shouldCloseHandle();\n            if (notAllowClose) {\n                navigating = true;\n                gemHistory.forward(); // 将重新触发 popstate\n                return; // 历史记录栈位置没有变化，不需要后面的 updateStore\n            }\n            else {\n                // handle 返回键\n                if (closeHandle) {\n                    closeHandle();\n                }\n                else if (newState.$hasCloseHandle) {\n                    // 有 modal 的页面刷新会执行 back 触发 popstate\n                    // 如果是二级 modal 页面刷新\n                    // 则还需要进行一次 back\n                    // !!! 不完美：三级 modal 页面刷新不支持返回到初始页面\n                    navigating = true;\n                    gemHistory.back();\n                }\n            }\n        }\n        dispatchBeforeChangeEvent();\n        cleanObject(store);\n        updateHistoryStore(newState);\n    });\n}\nconst { history, titleStore, basePathStore } = window._GEMHISTORY;\nexport { history, titleStore, basePathStore };\n//# sourceMappingURL=history.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.4.1');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","export const version = '1.7.12';\n//# sourceMappingURL=version.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { createMarker, directive, NodePart, removeNodes, reparentNodes } from '../lit-html.js';\n// Helper functions for manipulating parts\n// TODO(kschaaf): Refactor into Part API?\nconst createAndInsertPart = (containerPart, beforePart) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = beforePart === undefined ? containerPart.endNode :\n        beforePart.startNode;\n    const startNode = container.insertBefore(createMarker(), beforeNode);\n    container.insertBefore(createMarker(), beforeNode);\n    const newPart = new NodePart(containerPart.options);\n    newPart.insertAfterNode(startNode);\n    return newPart;\n};\nconst updatePart = (part, value) => {\n    part.setValue(value);\n    part.commit();\n    return part;\n};\nconst insertPartBefore = (containerPart, part, ref) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = ref ? ref.startNode : containerPart.endNode;\n    const endNode = part.endNode.nextSibling;\n    if (endNode !== beforeNode) {\n        reparentNodes(container, part.startNode, endNode, beforeNode);\n    }\n};\nconst removePart = (part) => {\n    removeNodes(part.startNode.parentNode, part.startNode, part.endNode.nextSibling);\n};\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list, start, end) => {\n    const map = new Map();\n    for (let i = start; i <= end; i++) {\n        map.set(list[i], i);\n    }\n    return map;\n};\n// Stores previous ordered list of parts and map of key to index\nconst partListCache = new WeakMap();\nconst keyListCache = new WeakMap();\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * and removals.\n *\n * IMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive((items, keyFnOrTemplate, template) => {\n    let keyFn;\n    if (template === undefined) {\n        template = keyFnOrTemplate;\n    }\n    else if (keyFnOrTemplate !== undefined) {\n        keyFn = keyFnOrTemplate;\n    }\n    return (containerPart) => {\n        if (!(containerPart instanceof NodePart)) {\n            throw new Error('repeat can only be used in text bindings');\n        }\n        // Old part & key lists are retrieved from the last update\n        // (associated with the part for this instance of the directive)\n        const oldParts = partListCache.get(containerPart) || [];\n        const oldKeys = keyListCache.get(containerPart) || [];\n        // New part list will be built up as we go (either reused from\n        // old parts or created for new keys in this update). This is\n        // saved in the above cache at the end of the update.\n        const newParts = [];\n        // New value list is eagerly generated from items along with a\n        // parallel array indicating its key.\n        const newValues = [];\n        const newKeys = [];\n        let index = 0;\n        for (const item of items) {\n            newKeys[index] = keyFn ? keyFn(item, index) : index;\n            newValues[index] = template(item, index);\n            index++;\n        }\n        // Maps from key to index for current and previous update; these\n        // are generated lazily only when needed as a performance\n        // optimization, since they are only required for multiple\n        // non-contiguous changes in the list, which are less common.\n        let newKeyToIndexMap;\n        let oldKeyToIndexMap;\n        // Head and tail pointers to old parts and new values\n        let oldHead = 0;\n        let oldTail = oldParts.length - 1;\n        let newHead = 0;\n        let newTail = newValues.length - 1;\n        // Overview of O(n) reconciliation algorithm (general approach\n        // based on ideas found in ivi, vue, snabbdom, etc.):\n        //\n        // * We start with the list of old parts and new values (and\n        //   arrays of their respective keys), head/tail pointers into\n        //   each, and we build up the new list of parts by updating\n        //   (and when needed, moving) old parts or creating new ones.\n        //   The initial scenario might look like this (for brevity of\n        //   the diagrams, the numbers in the array reflect keys\n        //   associated with the old parts or new values, although keys\n        //   and parts/values are actually stored in parallel arrays\n        //   indexed using the same head/tail pointers):\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n        //                                      item order\n        //      newHead ^                 ^ newTail\n        //\n        // * Iterate old & new lists from both sides, updating,\n        //   swapping, or removing parts at the head/tail locations\n        //   until neither head nor tail can move.\n        //\n        // * Example below: keys at head pointers match, so update old\n        //   part 0 in-place (no need to move it) and record part 0 in\n        //   the `newParts` list. The last thing we do is advance the\n        //   `oldHead` and `newHead` pointers (will be reflected in the\n        //   next diagram).\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //      newHead ^                 ^ newTail\n        //\n        // * Example below: head pointers don't match, but tail\n        //   pointers do, so update part 6 in place (no need to move\n        //   it), and record part 6 in the `newParts` list. Last,\n        //   advance the `oldTail` and `oldHead` pointers.\n        //\n        //         oldHead v              v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n        //                                      & newTail\n        //         newHead ^              ^ newTail\n        //\n        // * If neither head nor tail match; next check if one of the\n        //   old head/tail items was removed. We first need to generate\n        //   the reverse map of new keys to index (`newKeyToIndexMap`),\n        //   which is done once lazily as a performance optimization,\n        //   since we only hit this case if multiple non-contiguous\n        //   changes were made. Note that for contiguous removal\n        //   anywhere in the list, the head and tails would advance\n        //   from either end and pass each other before we get to this\n        //   case and removals would be handled in the final while loop\n        //   without needing to generate the map.\n        //\n        // * Example below: The key at `oldTail` was removed (no longer\n        //   in the `newKeyToIndexMap`), so remove that part from the\n        //   DOM and advance just the `oldTail` pointer.\n        //\n        //         oldHead v           v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n        //         newHead ^           ^ newTail\n        //\n        // * Once head and tail cannot move, any mismatches are due to\n        //   either new or moved items; if a new key is in the previous\n        //   \"old key to old index\" map, move the old part to the new\n        //   location, otherwise create and insert a new part. Note\n        //   that when moving an old part we null its position in the\n        //   oldParts array if it lies between the head and tail so we\n        //   know to skip it when the pointers get there.\n        //\n        // * Example below: neither head nor tail match, and neither\n        //   were removed; so find the `newHead` key in the\n        //   `oldKeyToIndexMap`, and move that old part's DOM into the\n        //   next head position (before `oldParts[oldHead]`). Last,\n        //   null the part in the `oldPart` array since it was\n        //   somewhere in the remaining oldParts still to be scanned\n        //   (between the head and tail pointers) so that we know to\n        //   skip that old part on future iterations.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n        //                                      newHead\n        //         newHead ^           ^ newTail\n        //\n        // * Note that for moves/insertions like the one above, a part\n        //   inserted at the head pointer is inserted before the\n        //   current `oldParts[oldHead]`, and a part inserted at the\n        //   tail pointer is inserted before `newParts[newTail+1]`. The\n        //   seeming asymmetry lies in the fact that new parts are\n        //   moved into place outside in, so to the right of the head\n        //   pointer are old parts, and to the right of the tail\n        //   pointer are new parts.\n        //\n        // * We always restart back from the top of the algorithm,\n        //   allowing matching and simple updates in place to\n        //   continue...\n        //\n        // * Example below: the head pointers once again match, so\n        //   simply update part 1 and record it in the `newParts`\n        //   array.  Last, advance both head pointers.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //            newHead ^        ^ newTail\n        //\n        // * As mentioned above, items that were moved as a result of\n        //   being stuck (the final else clause in the code below) are\n        //   marked with null, so we always advance old pointers over\n        //   these so we're comparing the next actual old value on\n        //   either end.\n        //\n        // * Example below: `oldHead` is null (already placed in\n        //   newParts), so advance `oldHead`.\n        //\n        //            oldHead v     v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n        //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //               newHead ^     ^ newTail\n        //\n        // * Note it's not critical to mark old parts as null when they\n        //   are moved from head to tail or tail to head, since they\n        //   will be outside the pointer range and never visited again.\n        //\n        // * Example below: Here the old tail key matches the new head\n        //   key, so the part at the `oldTail` position and move its\n        //   DOM to the new head position (before `oldParts[oldHead]`).\n        //   Last, advance `oldTail` and `newHead` pointers.\n        //\n        //               oldHead v  v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n        //                                     advance oldTail & newHead\n        //               newHead ^     ^ newTail\n        //\n        // * Example below: Old and new head keys match, so update the\n        //   old head part in place, and advance the `oldHead` and\n        //   `newHead` pointers.\n        //\n        //               oldHead v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n        //                                      newHead\n        //                  newHead ^  ^ newTail\n        //\n        // * Once the new or old pointers move past each other then all\n        //   we have left is additions (if old list exhausted) or\n        //   removals (if new list exhausted). Those are handled in the\n        //   final while loops at the end.\n        //\n        // * Example below: `oldHead` exceeded `oldTail`, so we're done\n        //   with the main loop.  Create the remaining part and insert\n        //   it at the new head position, and the update is complete.\n        //\n        //                   (oldHead > oldTail)\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //                     newHead ^ newTail\n        //\n        // * Note that the order of the if/else clauses is not\n        //   important to the algorithm, as long as the null checks\n        //   come first (to ensure we're always working on valid old\n        //   parts) and that the final else clause comes last (since\n        //   that's where the expensive moves occur). The order of\n        //   remaining clauses is is just a simple guess at which cases\n        //   will be most common.\n        //\n        // * TODO(kschaaf) Note, we could calculate the longest\n        //   increasing subsequence (LIS) of old items in new position,\n        //   and only move those not in the LIS set. However that costs\n        //   O(nlogn) time and adds a bit more code, and only helps\n        //   make rare types of mutations require fewer moves. The\n        //   above handles removes, adds, reversal, swaps, and single\n        //   moves of contiguous items in linear time, in the minimum\n        //   number of moves. As the number of multiple moves where LIS\n        //   might help approaches a random shuffle, the LIS\n        //   optimization becomes less helpful, so it seems not worth\n        //   the code at this point. Could reconsider if a compelling\n        //   case arises.\n        while (oldHead <= oldTail && newHead <= newTail) {\n            if (oldParts[oldHead] === null) {\n                // `null` means old part at head has already been used\n                // below; skip\n                oldHead++;\n            }\n            else if (oldParts[oldTail] === null) {\n                // `null` means old part at tail has already been used\n                // below; skip\n                oldTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newHead]) {\n                // Old head matches new head; update in place\n                newParts[newHead] =\n                    updatePart(oldParts[oldHead], newValues[newHead]);\n                oldHead++;\n                newHead++;\n            }\n            else if (oldKeys[oldTail] === newKeys[newTail]) {\n                // Old tail matches new tail; update in place\n                newParts[newTail] =\n                    updatePart(oldParts[oldTail], newValues[newTail]);\n                oldTail--;\n                newTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newTail]) {\n                // Old head matches new tail; update and move to new tail\n                newParts[newTail] =\n                    updatePart(oldParts[oldHead], newValues[newTail]);\n                insertPartBefore(containerPart, oldParts[oldHead], newParts[newTail + 1]);\n                oldHead++;\n                newTail--;\n            }\n            else if (oldKeys[oldTail] === newKeys[newHead]) {\n                // Old tail matches new head; update and move to new head\n                newParts[newHead] =\n                    updatePart(oldParts[oldTail], newValues[newHead]);\n                insertPartBefore(containerPart, oldParts[oldTail], oldParts[oldHead]);\n                oldTail--;\n                newHead++;\n            }\n            else {\n                if (newKeyToIndexMap === undefined) {\n                    // Lazily generate key-to-index maps, used for removals &\n                    // moves below\n                    newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n                    oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n                }\n                if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n                    // Old head is no longer in new list; remove\n                    removePart(oldParts[oldHead]);\n                    oldHead++;\n                }\n                else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n                    // Old tail is no longer in new list; remove\n                    removePart(oldParts[oldTail]);\n                    oldTail--;\n                }\n                else {\n                    // Any mismatches at this point are due to additions or\n                    // moves; see if we have an old part we can reuse and move\n                    // into place\n                    const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n                    const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n                    if (oldPart === null) {\n                        // No old part for this value; create a new one and\n                        // insert it\n                        const newPart = createAndInsertPart(containerPart, oldParts[oldHead]);\n                        updatePart(newPart, newValues[newHead]);\n                        newParts[newHead] = newPart;\n                    }\n                    else {\n                        // Reuse old part\n                        newParts[newHead] =\n                            updatePart(oldPart, newValues[newHead]);\n                        insertPartBefore(containerPart, oldPart, oldParts[oldHead]);\n                        // This marks the old part as having been used, so that\n                        // it will be skipped in the first two checks above\n                        oldParts[oldIndex] = null;\n                    }\n                    newHead++;\n                }\n            }\n        }\n        // Add parts for any remaining new values\n        while (newHead <= newTail) {\n            // For all remaining additions, we insert before last new\n            // tail, since old pointers are no longer valid\n            const newPart = createAndInsertPart(containerPart, newParts[newTail + 1]);\n            updatePart(newPart, newValues[newHead]);\n            newParts[newHead++] = newPart;\n        }\n        // Remove any remaining unused old parts\n        while (oldHead <= oldTail) {\n            const oldPart = oldParts[oldHead++];\n            if (oldPart !== null) {\n                removePart(oldPart);\n            }\n        }\n        // Save order of new parts for next round\n        partListCache.set(containerPart, newParts);\n        keyListCache.set(containerPart, newKeys);\n    };\n});\n//# sourceMappingURL=repeat.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { directive } from '../lit-html.js';\nconst previousValues = new WeakMap();\n/**\n * Prevents re-render of a template function until a single value or an array of\n * values changes.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([user.id, company.id], () => html`...`)}\n *   </div>\n * ```\n *\n * In this case, the template only renders if either `user.id` or `company.id`\n * changes.\n *\n * guard() is useful with immutable data patterns, by preventing expensive work\n * until data updates.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([immutableItems], () => immutableItems.map(i => html`${i}`))}\n *   </div>\n * ```\n *\n * In this case, items are mapped over only when the array reference changes.\n *\n * @param value the value to check before re-rendering\n * @param f the template function\n */\nexport const guard = directive((value, f) => (part) => {\n    const previousValue = previousValues.get(part);\n    if (Array.isArray(value)) {\n        // Dirty-check arrays by item\n        if (Array.isArray(previousValue) &&\n            previousValue.length === value.length &&\n            value.every((v, i) => v === previousValue[i])) {\n            return;\n        }\n    }\n    else if (previousValue === value &&\n        (value !== undefined || previousValues.has(part))) {\n        // Dirty-check non-arrays by identity\n        return;\n    }\n    part.setValue(f());\n    // Copy the value if it's an array so that if it's mutated we don't forget\n    // what the previous values were.\n    previousValues.set(part, Array.isArray(value) ? Array.from(value) : value);\n});\n//# sourceMappingURL=guard.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive } from '../lit-html.js';\nconst previousValues = new WeakMap();\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = directive((value) => (part) => {\n    const previousValue = previousValues.get(part);\n    if (value === undefined && part instanceof AttributePart) {\n        // If the value is undefined, remove the attribute, but only if the value\n        // was previously defined.\n        if (previousValue !== undefined || !previousValues.has(part)) {\n            const name = part.committer.name;\n            part.committer.element.removeAttribute(name);\n        }\n    }\n    else if (value !== previousValue) {\n        part.setValue(value);\n    }\n    previousValues.set(part, value);\n});\n//# sourceMappingURL=if-defined.js.map","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _a, _GemElement_final, _GemElement_renderRoot, _GemElement_internals, _GemElement_isAppendReason, _GemElement_isMounted, _GemElement_isAsync, _GemElement_effectList, _GemElement_memoList, _GemElement_unmountCallback, _GemElement_exec, _GemElement_execEffect, _GemElement_execMemo, _GemElement_initEffect, _GemElement_render, _GemElement_shouldUpdate, _GemElement_updateCallback, _GemElement_update, _GemElement_updated, _GemElement_disconnectStore, _GemElement_connectedCallback, _GemElement_clearEffect;\nimport { html, render } from 'lit-html';\nimport { connect } from './store';\nimport { LinkedList, addMicrotask, SheetToken, isArrayChange, GemError, kebabToCamelCase, PropProxyMap, removeItems, addListener, } from './utils';\nimport * as GemExports from './element';\nimport * as VersionExports from './version';\nexport { html, svg, render, directive, TemplateResult, SVGTemplateResult } from 'lit-html';\nexport { repeat } from 'lit-html/directives/repeat';\n// https://github.com/Polymer/lit-html/issues/1048\nexport { guard } from 'lit-html/directives/guard';\nexport { ifDefined } from 'lit-html/directives/if-defined';\nfunction emptyFunction() {\n    // 用于占位的空函数\n}\nfunction execCallback(fun) {\n    typeof fun === 'function' && fun();\n}\n// global render task pool\nconst asyncRenderTaskList = new LinkedList();\nconst tick = (timeStamp = performance.now()) => {\n    if (performance.now() > timeStamp + 16)\n        return requestAnimationFrame(tick);\n    const task = asyncRenderTaskList.get();\n    if (task) {\n        task();\n        tick(timeStamp);\n    }\n};\nasyncRenderTaskList.addEventListener('start', () => addMicrotask(tick));\nconst constructorSymbol = Symbol('constructor');\nconst initSymbol = Symbol('init');\nconst updateSymbol = Symbol('update');\nexport class GemElement extends HTMLElement {\n    constructor(options = {}) {\n        super();\n        _GemElement_renderRoot.set(this, void 0);\n        _GemElement_internals.set(this, void 0);\n        _GemElement_isAppendReason.set(this, void 0);\n        // 和 isConnected 有区别\n        _GemElement_isMounted.set(this, void 0);\n        _GemElement_isAsync.set(this, void 0);\n        _GemElement_effectList.set(this, void 0);\n        _GemElement_memoList.set(this, void 0);\n        _GemElement_unmountCallback.set(this, void 0);\n        /**\n         * @helper\n         * 设置元素 state，会触发更新\n         *\n         * ```js\n         * class App extends GemElement {\n         *   click() {\n         *     this.setState({});\n         *   }\n         * }\n         * ```\n         * */\n        this.setState = (payload) => {\n            if (!this.state)\n                throw new GemError('`state` not initialized');\n            Object.assign(this.state, payload);\n            addMicrotask(__classPrivateFieldGet(this, _GemElement_update, \"f\"));\n        };\n        _GemElement_exec.set(this, (list) => {\n            list === null || list === void 0 ? void 0 : list.forEach((effectItem) => {\n                const { callback, getDep, values, preCallback } = effectItem;\n                const newValues = getDep === null || getDep === void 0 ? void 0 : getDep();\n                if (!getDep || !values || isArrayChange(values, newValues)) {\n                    execCallback(preCallback);\n                    effectItem.preCallback = callback(newValues, values);\n                    effectItem.values = newValues;\n                }\n            });\n        });\n        /**\n         * 每次更新完检查依赖，执行对应的副作用回调\n         * */\n        _GemElement_execEffect.set(this, () => {\n            __classPrivateFieldGet(this, _GemElement_exec, \"f\").call(this, __classPrivateFieldGet(this, _GemElement_effectList, \"f\"));\n        });\n        _GemElement_execMemo.set(this, () => {\n            __classPrivateFieldGet(this, _GemElement_exec, \"f\").call(this, __classPrivateFieldGet(this, _GemElement_memoList, \"f\"));\n        });\n        /**\n         * @helper\n         * 记录副作用回调和值，在 `constructor`/`mounted` 中使用\n         * 回调到返回值如果是函数将再卸载时执行\n         * 第一次执行时 `oldDeps` 为空\n         *\n         * ```js\n         * class App extends GemElement {\n         *   mounted() {\n         *     this.effect(callback, () => [this.attrName]);\n         *   }\n         * }\n         * ```\n         * */\n        this.effect = (callback, getDep) => {\n            if (!__classPrivateFieldGet(this, _GemElement_effectList, \"f\"))\n                __classPrivateFieldSet(this, _GemElement_effectList, [], \"f\");\n            const effectItem = {\n                callback,\n                getDep,\n                initialized: __classPrivateFieldGet(this, _GemElement_isMounted, \"f\"),\n                inConstructor: this[constructorSymbol],\n            };\n            // 以挂载时立即执行副作用，未挂载时等挂载后执行\n            if (__classPrivateFieldGet(this, _GemElement_isMounted, \"f\")) {\n                effectItem.values = getDep === null || getDep === void 0 ? void 0 : getDep();\n                effectItem.preCallback = callback(effectItem.values);\n            }\n            __classPrivateFieldGet(this, _GemElement_effectList, \"f\").push(effectItem);\n        };\n        /**\n         * @helper\n         * 在 `render` 前执行回调，不要在里面使用 `setState`\n         * 和 `effect` 一样接受依赖数组参数，在 `constructor`/`willMount` 中使用;\n         * 第一次执行时 `oldDeps` 为空\n         *\n         * ```js\n         * class App extends GemElement {\n         *   willMount() {\n         *     this.memo(() => {\n         *       this.a = exec(this.attrName);\n         *     }), () => [this.attrName]);\n         *   }\n         * }\n         * ```\n         * */\n        this.memo = (callback, getDep) => {\n            if (!__classPrivateFieldGet(this, _GemElement_memoList, \"f\"))\n                __classPrivateFieldSet(this, _GemElement_memoList, [], \"f\");\n            __classPrivateFieldGet(this, _GemElement_memoList, \"f\").push({\n                callback,\n                getDep,\n                inConstructor: this[constructorSymbol],\n            });\n        };\n        /**\n         * 元素挂载后执行还未初始化的副作用\n         * */\n        _GemElement_initEffect.set(this, () => {\n            var _b;\n            (_b = __classPrivateFieldGet(this, _GemElement_effectList, \"f\")) === null || _b === void 0 ? void 0 : _b.forEach((effectItem) => {\n                const { callback, getDep, initialized } = effectItem;\n                if (!initialized) {\n                    effectItem.values = getDep === null || getDep === void 0 ? void 0 : getDep();\n                    effectItem.preCallback = callback(effectItem.values);\n                    effectItem.initialized = true;\n                }\n            });\n        });\n        _GemElement_render.set(this, () => {\n            __classPrivateFieldGet(this, _GemElement_execMemo, \"f\").call(this);\n            const isLight = __classPrivateFieldGet(this, _GemElement_renderRoot, \"f\") === this;\n            const temp = this.render ? this.render() : isLight ? undefined : html `<slot></slot>`;\n            if (temp === undefined)\n                return;\n            render(temp, __classPrivateFieldGet(this, _GemElement_renderRoot, \"f\"));\n        });\n        _GemElement_shouldUpdate.set(this, () => {\n            return this.shouldUpdate ? this.shouldUpdate() : true;\n        });\n        _GemElement_updateCallback.set(this, () => {\n            if (__classPrivateFieldGet(this, _GemElement_isMounted, \"f\") && __classPrivateFieldGet(this, _GemElement_shouldUpdate, \"f\").call(this)) {\n                __classPrivateFieldGet(this, _GemElement_render, \"f\").call(this);\n                addMicrotask(__classPrivateFieldGet(this, _GemElement_updated, \"f\"));\n                addMicrotask(__classPrivateFieldGet(this, _GemElement_execEffect, \"f\"));\n            }\n        });\n        _GemElement_update.set(this, () => {\n            if (__classPrivateFieldGet(this, _GemElement_isAsync, \"f\")) {\n                asyncRenderTaskList.add(__classPrivateFieldGet(this, _GemElement_updateCallback, \"f\"));\n            }\n            else {\n                __classPrivateFieldGet(this, _GemElement_updateCallback, \"f\").call(this);\n            }\n        });\n        /**\n         * @helper\n         * async\n         */\n        this.update = () => {\n            addMicrotask(__classPrivateFieldGet(this, _GemElement_update, \"f\"));\n        };\n        _GemElement_updated.set(this, () => {\n            var _b;\n            (_b = this.updated) === null || _b === void 0 ? void 0 : _b.call(this);\n        });\n        _GemElement_disconnectStore.set(this, void 0);\n        _GemElement_connectedCallback.set(this, () => {\n            var _b, _c, _d;\n            if (__classPrivateFieldGet(this, _GemElement_isAppendReason, \"f\")) {\n                __classPrivateFieldSet(this, _GemElement_isAppendReason, false, \"f\");\n                return;\n            }\n            // 似乎这是最早的判断不在 `constructor` 中的地方\n            Reflect.set(this, constructorSymbol, false);\n            (_b = this.willMount) === null || _b === void 0 ? void 0 : _b.call(this);\n            const { observedStores, rootElement } = this.constructor;\n            __classPrivateFieldSet(this, _GemElement_disconnectStore, observedStores === null || observedStores === void 0 ? void 0 : observedStores.map((store) => connect(store, __classPrivateFieldGet(this, _GemElement_update, \"f\"))), \"f\");\n            __classPrivateFieldGet(this, _GemElement_render, \"f\").call(this);\n            __classPrivateFieldSet(this, _GemElement_isMounted, true, \"f\");\n            __classPrivateFieldSet(this, _GemElement_unmountCallback, (_c = this.mounted) === null || _c === void 0 ? void 0 : _c.call(this), \"f\");\n            __classPrivateFieldGet(this, _GemElement_initEffect, \"f\").call(this);\n            if (rootElement &&\n                this.isConnected &&\n                ((_d = this.getRootNode().host) === null || _d === void 0 ? void 0 : _d.tagName) !== rootElement.toUpperCase()) {\n                throw new GemError(`not allow current root type`);\n            }\n        });\n        _GemElement_clearEffect.set(this, (list) => {\n            return list === null || list === void 0 ? void 0 : list.filter((e) => {\n                execCallback(e.preCallback);\n                e.initialized = false;\n                return e.inConstructor;\n            });\n        });\n        // 外部不可见，但允许类外面使用\n        addMicrotask(() => Reflect.set(this, initSymbol, false));\n        Reflect.set(this, constructorSymbol, true);\n        Reflect.set(this, initSymbol, true);\n        Reflect.set(this, updateSymbol, () => {\n            if (__classPrivateFieldGet(this, _GemElement_isMounted, \"f\")) {\n                addMicrotask(__classPrivateFieldGet(this, _GemElement_update, \"f\"));\n            }\n        });\n        __classPrivateFieldSet(this, _GemElement_isAsync, options.isAsync, \"f\");\n        __classPrivateFieldSet(this, _GemElement_renderRoot, options.isLight\n            ? this\n            : this.attachShadow({\n                mode: options.mode || 'open',\n                delegatesFocus: options.delegatesFocus,\n                slotAssignment: options.slotAssignment,\n            }), \"f\");\n        // https://stackoverflow.com/questions/43836886/failed-to-construct-customelement-error-when-javascript-file-is-placed-in-head\n        // focusable 元素一般同时具备 disabled 属性\n        // 和原生元素行为保持一致，disabled 时不触发 click 事件\n        let hasInitTabIndex;\n        this.effect(([disabled = false]) => {\n            if (hasInitTabIndex === undefined)\n                hasInitTabIndex = this.hasAttribute('tabindex');\n            this.internals.ariaDisabled = String(disabled);\n            if (options.focusable && !hasInitTabIndex) {\n                this.tabIndex = -Number(disabled);\n            }\n            if ((options.focusable || options.delegatesFocus) && disabled) {\n                return addListener(this, 'click', (e) => e.isTrusted && e.stopImmediatePropagation(), {\n                    capture: true,\n                });\n            }\n        }, () => [Reflect.get(this, 'disabled')]);\n        const { adoptedStyleSheets } = new.target;\n        if (adoptedStyleSheets) {\n            const sheets = adoptedStyleSheets.map((item) => item[SheetToken] || item);\n            if (this.shadowRoot) {\n                this.shadowRoot.adoptedStyleSheets = sheets;\n            }\n            else {\n                this.effect(() => {\n                    const root = this.getRootNode();\n                    root.adoptedStyleSheets = [...root.adoptedStyleSheets, ...sheets];\n                    return () => {\n                        root.adoptedStyleSheets = removeItems(root.adoptedStyleSheets, sheets);\n                    };\n                }, () => []);\n            }\n        }\n    }\n    get internals() {\n        if (!__classPrivateFieldGet(this, _GemElement_internals, \"f\")) {\n            __classPrivateFieldSet(this, _GemElement_internals, this.attachInternals(), \"f\");\n            // https://groups.google.com/a/chromium.org/g/blink-dev/c/JvpHoUfhJYE?pli=1\n            // https://bugs.webkit.org/show_bug.cgi?id=215911\n            // https://bugzilla.mozilla.org/show_bug.cgi?id=1588763\n            try {\n                __classPrivateFieldGet(this, _GemElement_internals, \"f\").states.add('foo');\n                __classPrivateFieldGet(this, _GemElement_internals, \"f\").states.delete('foo');\n            }\n            catch (_b) {\n                Reflect.defineProperty(__classPrivateFieldGet(this, _GemElement_internals, \"f\"), 'states', {\n                    value: {\n                        has: (v) => kebabToCamelCase(v) in this.dataset,\n                        add: (v) => (this.dataset[kebabToCamelCase(v)] = ''),\n                        delete: (v) => delete this.dataset[kebabToCamelCase(v)],\n                    },\n                });\n            }\n        }\n        return __classPrivateFieldGet(this, _GemElement_internals, \"f\");\n    }\n    /**\n     * @private\n     * @final\n     * use `effect`\n     */\n    attributeChangedCallback() {\n        if (__classPrivateFieldGet(this, _GemElement_isMounted, \"f\")) {\n            addMicrotask(__classPrivateFieldGet(this, _GemElement_update, \"f\"));\n        }\n        return __classPrivateFieldGet(_a, _a, \"f\", _GemElement_final);\n    }\n    closestElement(constructorOrTag) {\n        const isConstructor = typeof constructorOrTag === 'function';\n        const tagName = typeof constructorOrTag === 'string' && constructorOrTag.toUpperCase();\n        const is = (ele) => (isConstructor ? ele.constructor === constructorOrTag : ele.tagName === tagName);\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let node = this;\n        while (node) {\n            if (is(node))\n                break;\n            node = node.parentElement || node.getRootNode().host;\n        }\n        return node;\n    }\n    /**\n     * @private\n     * @final\n     * use `mounted`; 允许手动调用 `connectedCallback` 以清除装饰器定义的字段\n     */\n    connectedCallback() {\n        if (this.isConnected && __classPrivateFieldGet(this, _GemElement_isAsync, \"f\")) {\n            asyncRenderTaskList.add(__classPrivateFieldGet(this, _GemElement_connectedCallback, \"f\"));\n        }\n        else {\n            __classPrivateFieldGet(this, _GemElement_connectedCallback, \"f\").call(this);\n        }\n        return __classPrivateFieldGet(_a, _a, \"f\", _GemElement_final);\n    }\n    /**\n     * @private\n     * @final\n     */\n    adoptedCallback() {\n        return __classPrivateFieldGet(_a, _a, \"f\", _GemElement_final);\n    }\n    /**\n     * @private\n     * @final\n     * use `unmounted`\n     */\n    disconnectedCallback() {\n        var _b, _c;\n        if (this.isConnected) {\n            __classPrivateFieldSet(this, _GemElement_isAppendReason, true, \"f\");\n            return;\n        }\n        __classPrivateFieldSet(this, _GemElement_isMounted, false, \"f\");\n        (_b = __classPrivateFieldGet(this, _GemElement_disconnectStore, \"f\")) === null || _b === void 0 ? void 0 : _b.forEach((disconnect) => disconnect());\n        execCallback(__classPrivateFieldGet(this, _GemElement_unmountCallback, \"f\"));\n        (_c = this.unmounted) === null || _c === void 0 ? void 0 : _c.call(this);\n        __classPrivateFieldSet(this, _GemElement_effectList, __classPrivateFieldGet(this, _GemElement_clearEffect, \"f\").call(this, __classPrivateFieldGet(this, _GemElement_effectList, \"f\")), \"f\");\n        __classPrivateFieldSet(this, _GemElement_memoList, __classPrivateFieldGet(this, _GemElement_clearEffect, \"f\").call(this, __classPrivateFieldGet(this, _GemElement_memoList, \"f\")), \"f\");\n        return __classPrivateFieldGet(_a, _a, \"f\", _GemElement_final);\n    }\n}\n_a = GemElement, _GemElement_renderRoot = new WeakMap(), _GemElement_internals = new WeakMap(), _GemElement_isAppendReason = new WeakMap(), _GemElement_isMounted = new WeakMap(), _GemElement_isAsync = new WeakMap(), _GemElement_effectList = new WeakMap(), _GemElement_memoList = new WeakMap(), _GemElement_unmountCallback = new WeakMap(), _GemElement_exec = new WeakMap(), _GemElement_execEffect = new WeakMap(), _GemElement_execMemo = new WeakMap(), _GemElement_initEffect = new WeakMap(), _GemElement_render = new WeakMap(), _GemElement_shouldUpdate = new WeakMap(), _GemElement_updateCallback = new WeakMap(), _GemElement_update = new WeakMap(), _GemElement_updated = new WeakMap(), _GemElement_disconnectStore = new WeakMap(), _GemElement_connectedCallback = new WeakMap(), _GemElement_clearEffect = new WeakMap();\n// 禁止覆盖自定义元素原生生命周期方法\n// https://github.com/microsoft/TypeScript/issues/21388#issuecomment-934345226\n_GemElement_final = { value: Symbol() };\nconst gemElementProxyMap = new PropProxyMap();\nexport function defineAttribute(target, prop, attr) {\n    const { booleanAttributes, numberAttributes } = target.constructor;\n    Object.defineProperty(target, prop, {\n        configurable: true,\n        get() {\n            // fix karma test\n            // 判断是否是自定义元素实例\n            if (!(initSymbol in this))\n                return;\n            const that = this;\n            // 不能从 proxy 对象中读取值\n            const value = that.getAttribute(attr);\n            if (booleanAttributes === null || booleanAttributes === void 0 ? void 0 : booleanAttributes.has(attr)) {\n                return value === null ? false : true;\n            }\n            if (numberAttributes === null || numberAttributes === void 0 ? void 0 : numberAttributes.has(attr)) {\n                return Number(value);\n            }\n            return value || '';\n        },\n        set(v) {\n            const that = this;\n            const proxy = gemElementProxyMap.get(this);\n            const hasSet = proxy[prop];\n            const value = that.getAttribute(attr);\n            // https://github.com/whatwg/dom/issues/922\n            if (this[initSymbol] && value !== null && !hasSet)\n                return;\n            // 字段和构造函数中都有对 attr 设置时会执行多次\n            // Firefox WebConsole 中不知道为什么在构造函数中 this[initSymbol] 已经为 false\n            proxy[prop] = true;\n            const isBool = booleanAttributes === null || booleanAttributes === void 0 ? void 0 : booleanAttributes.has(attr);\n            if (v === null || v === undefined) {\n                that.removeAttribute(attr);\n            }\n            else if (isBool) {\n                // 当 attr 存在且 !!v 为 true 时，toggleAttribute 不会造成 Attribute 改变\n                that.toggleAttribute(attr, !!v);\n            }\n            else {\n                if (value !== String(v))\n                    that.setAttribute(attr, String(v));\n            }\n        },\n    });\n}\nconst isEventHandleSymbol = Symbol('event handle');\nexport function defineProperty(target, prop, event, eventOptions) {\n    Object.defineProperty(target, prop, {\n        configurable: true,\n        get() {\n            const value = gemElementProxyMap.get(this)[prop];\n            if (value || !event) {\n                return value;\n            }\n            else {\n                this[prop] = emptyFunction;\n                return this[prop];\n            }\n        },\n        set(v) {\n            const that = this;\n            const proxy = gemElementProxyMap.get(that);\n            if (v !== proxy[prop]) {\n                if (event) {\n                    proxy[prop] = (v === null || v === void 0 ? void 0 : v[isEventHandleSymbol])\n                        ? v\n                        : (detail, options) => {\n                            const evt = new CustomEvent(event, { ...options, ...eventOptions, detail });\n                            that.dispatchEvent(evt);\n                            v(detail, options);\n                        };\n                    Reflect.set(proxy[prop], isEventHandleSymbol, true);\n                    // emitter 不触发元素更新\n                }\n                else {\n                    proxy[prop] = v;\n                    this[updateSymbol]();\n                }\n            }\n        },\n    });\n}\nconst getReflectTargets = (ele) => [...ele.querySelectorAll('[data-gem-reflect]')].map((e) => e.target);\nexport function defineRef(target, prop, ref) {\n    const refSelector = `[ref=${ref}]`;\n    Object.defineProperty(target, prop, {\n        configurable: true,\n        get() {\n            const proxy = gemElementProxyMap.get(this);\n            let refobject = proxy[prop];\n            if (!refobject) {\n                const that = this;\n                const ele = that.shadowRoot || that;\n                refobject = {\n                    get ref() {\n                        return ref;\n                    },\n                    get element() {\n                        for (const e of [ele, ...getReflectTargets(ele)]) {\n                            const result = e.querySelector(refSelector);\n                            if (result)\n                                return result;\n                        }\n                    },\n                    get elements() {\n                        return [ele, ...getReflectTargets(ele)].map((e) => [...e.querySelectorAll(refSelector)]).flat();\n                    },\n                };\n                proxy[prop] = refobject;\n            }\n            return refobject;\n        },\n    });\n}\nexport function defineCSSState(target, prop, state) {\n    Object.defineProperty(target, prop, {\n        configurable: true,\n        get() {\n            const that = this;\n            const { states } = that.internals;\n            return states === null || states === void 0 ? void 0 : states.has(state);\n        },\n        set(v) {\n            const that = this;\n            const { states } = that.internals;\n            if (v) {\n                states === null || states === void 0 ? void 0 : states.add(state);\n            }\n            else {\n                states === null || states === void 0 ? void 0 : states.delete(state);\n            }\n        },\n    });\n}\nexport const nativeDefineElement = customElements.define.bind(customElements);\ncustomElements.define = (name, cls, options) => {\n    if (cls.prototype instanceof GemElement) {\n        const { observedAttributes, observedProperties, defineEvents, defineCSSStates, defineRefs } = cls;\n        observedAttributes === null || observedAttributes === void 0 ? void 0 : observedAttributes.forEach((attr) => defineAttribute(cls.prototype, kebabToCamelCase(attr), attr));\n        observedProperties === null || observedProperties === void 0 ? void 0 : observedProperties.forEach((prop) => defineProperty(cls.prototype, prop));\n        defineEvents === null || defineEvents === void 0 ? void 0 : defineEvents.forEach((event) => defineProperty(cls.prototype, kebabToCamelCase(event), event));\n        defineCSSStates === null || defineCSSStates === void 0 ? void 0 : defineCSSStates.forEach((state) => defineCSSState(cls.prototype, kebabToCamelCase(state), state));\n        defineRefs === null || defineRefs === void 0 ? void 0 : defineRefs.forEach((ref) => defineRef(cls.prototype, kebabToCamelCase(ref), ref));\n    }\n    nativeDefineElement(name, cls, options);\n};\nif (window.__GEM_DEVTOOLS__HOOK__) {\n    Object.assign(window.__GEM_DEVTOOLS__HOOK__, { ...GemExports, ...VersionExports });\n}\n//# sourceMappingURL=element.js.map","import { defineAttribute, defineCSSState, defineProperty, defineRef, GemElement, nativeDefineElement } from './element';\nimport { camelToKebabCase, randomStr } from './utils';\nfunction pushStaticField(target, field, member, isSet = false) {\n    const cls = target.constructor;\n    const current = cls[field];\n    if (!cls.hasOwnProperty(field)) {\n        Object.defineProperty(cls, field, {\n            value: isSet ? new Set(current) : current ? Array.from(current) : [],\n        });\n    }\n    cls[field][isSet ? 'add' : 'push'](member);\n}\n/**\n * 引用元素，只有第一个标记 ref 的元素有效\n *\n * For example\n * ```ts\n *  class App extends GemElement {\n *    @refobject childRef: RefObject<Children>;\n *    loadHandle = () => {\n *      const { element } = this.childRef;\n *      console.log(element);\n *    };\n *    render() {\n *      render html`<div ref=${this.childRef.ref}><div>`;\n *    }\n *  }\n * ```\n */\nexport function refobject(target, prop) {\n    const ref = `${camelToKebabCase(prop)}-${randomStr()}`;\n    pushStaticField(target, 'defineRefs', ref);\n    defineRef(target, prop, ref);\n}\n/**\n * 定义一个响应式的 attribute，驼峰字段名将自动映射到烤串 attribute，默认值为空字符串\n *\n * For example\n * ```ts\n *  class App extends GemElement {\n *    @attribute attr: string;\n *  }\n * ```\n */\nfunction defineAttr(target, prop, attr) {\n    pushStaticField(target, 'observedAttributes', attr);\n    defineAttribute(target, prop, attr);\n}\nexport function attribute(target, prop) {\n    defineAttr(target, prop, camelToKebabCase(prop));\n}\nexport function boolattribute(target, prop) {\n    const attr = camelToKebabCase(prop);\n    pushStaticField(target, 'booleanAttributes', attr, true);\n    defineAttr(target, prop, attr);\n}\nexport function numattribute(target, prop) {\n    const attr = camelToKebabCase(prop);\n    pushStaticField(target, 'numberAttributes', attr, true);\n    defineAttr(target, prop, attr);\n}\n/**\n * 定义一个响应式的 property，注意值可能为 `undefined`\n *\n * For example\n * ```ts\n *  class App extends GemElement {\n *    @property prop: Data | undefined;\n *  }\n * ```\n */\nexport function property(target, prop) {\n    pushStaticField(target, 'observedProperties', prop);\n    defineProperty(target, prop);\n}\n/**\n * 定义一个元素[内部](https://html.spec.whatwg.org/multipage/custom-elements.html#elementinternals) state，\n * 类似 `:checked`，用于自定义 css 伪类（:state(xxx)），默认值即为字段名。\n * 重新赋值转换 css 伪类\n * 将来也可能用于 IDE 识别\n *\n * For example\n * ```ts\n *  class App extends GemElement {\n *    @state state: boolean;\n *  }\n * ```\n */\nexport function state(target, prop) {\n    const attr = camelToKebabCase(prop);\n    pushStaticField(target, 'defineCSSStates', attr);\n    defineCSSState(target, prop, attr);\n}\n/**\n * 定义一个内部 slot，默认值即为字段名，不能使用全局属性 `slot`\n *\n * For example\n * ```ts\n *  class App extends GemElement {\n *    @slot slot: string;\n *    @slot static slot: string;\n *  }\n * ```\n */\nexport function slot(target, prop) {\n    const attr = camelToKebabCase(target[prop] || prop);\n    target[prop] = attr;\n    pushStaticField(target instanceof GemElement ? target : target.prototype, 'defineSlots', attr);\n}\n/**\n * 定义一个内部 part，默认值即为字段名，不能使用全局属性 `part`\n *\n * For example\n * ```ts\n *  class App extends GemElement {\n *    @part part: string;\n *    @part static part: string;\n *  }\n * ```\n */\nexport function part(target, prop) {\n    const attr = camelToKebabCase(target[prop] || prop);\n    target[prop] = attr;\n    pushStaticField(target instanceof GemElement ? target : target.prototype, 'defineParts', attr);\n}\n/**\n * 定义一个事件发射器，类似 `HTMLElement.click`，\n * 调用时将同步发送一个和字段名称的烤串式格式的自定义事件\n *\n * For example\n * ```ts\n *  class App extends GemElement {\n *    @emitter load: Function;\n *  }\n * ```\n */\nexport function emitter(target, prop) {\n    defineEmitter(target, prop);\n}\nexport function globalemitter(target, prop) {\n    defineEmitter(target, prop, { bubbles: true, composed: true });\n}\nfunction defineEmitter(target, prop, options) {\n    const event = camelToKebabCase(prop);\n    pushStaticField(target, 'defineEvents', event);\n    defineProperty(target, prop, event, options);\n}\n/**\n * 分配一个构造的样式表，如果元素是 lightDOM，则将样式表挂载到 RootNode 上\n *\n * For example\n * ```ts\n *  @adoptedStyle(stylesheet)\n *  class App extends GemElement {}\n * ```\n */\nexport function adoptedStyle(style) {\n    return function (cls) {\n        const con = cls;\n        pushStaticField(con.prototype, 'adoptedStyleSheets', style);\n    };\n}\n/**\n * 链接一个 store，当 store 更新时更新元素\n *\n * For example\n * ```ts\n *  @connectStore(store)\n *  class App extends GemElement {}\n * ```\n */\nexport function connectStore(store) {\n    return function (cls) {\n        const con = cls;\n        pushStaticField(con.prototype, 'observedStores', store);\n    };\n}\n/**\n * 限制元素的 root 节点类型\n *\n * For example\n * ```ts\n *  @rootElement('my-element')\n *  class App extends GemElement {}\n * ```\n */\nexport function rootElement(rootType) {\n    return function (cls) {\n        const con = cls;\n        con.rootElement = rootType;\n    };\n}\n/**\n * 定义自定义元素\n *\n * For example\n * ```ts\n *  @customElement('my-element')\n *  class App extends GemElement {}\n * ```\n */\nexport function customElement(name) {\n    return function (cls) {\n        nativeDefineElement(name, cls);\n    };\n}\n//# sourceMappingURL=decorators.js.map"],"names":["__classPrivateFieldGet","__classPrivateFieldSet","func","_LinkedList_delete","_a","key","store","length","strings","parts","part","html","directive","committer","previousValues","refobject"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]}